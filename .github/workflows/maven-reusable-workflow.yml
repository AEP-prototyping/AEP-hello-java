name: 'Standard AEP Workflow - Maven Build, Push, and Scan'
on:
  workflow_call: 
    # ------------- INPUTS ---------------
    inputs:
      Runs_On:
        type: string
        description: Name of Label to run Workflow on
        required: false
        default: 'linux'
      Java_Version: 
        type: string
        description: The version of Java to Install
        required: false
        default: '11'
      Maven_Version:
        type: string
        description: The version of Maven to Install
        required: false
        default: '3.8.8'
      Artifactory_Server_ID:
        type: string
        description: 'The Artifactory Server ID'
        required: false
        default: 'rtfx-test'
      Maven_POM_File:
        type: string
        description: 'The Location and Name of the POM file(other than Root)'
        required: false
        default: ''
      Maven_Build_Parms:
        type: string
        description: 'The Build Parameters'
        required: false
        default: 'clean install'
      Maven_Settings_File:
        type: string
        description: 'The Maven Settings.xml file name and location'
        required: false
        default: '.m2/settings.xml'
      Maven_Push_Parms:
        type: string
        description: 'The Push Parameters'
        required: false
        default: 'validate package install'
      Artifactory_Dependency_Releases_Lib:
        type: string
        description: 'The Artifactory Library to pull Release Dependencies from'
        required: false
        default: '${{github.event.repository.name}}-maven-virtual'
      Artifactory_Dependency_Snapshots_Lib:
        type: string
        description: 'The Artifactory Library to pull Snapshot Dependencies from'
        required: false
        default: '${{github.event.repository.name}}-maven-virtual'
      Artifactory_Deployment_Releases_Lib:
        type: string
        description: 'The Artifactory Library to deploy Release version to'
        required: false
        default: '${{github.event.repository.name}}-maven-dev-local'
      Artifactory_Deployment_Snapshots_Lib:
        type: string
        description: 'The Artifactory Library to deploy Snapshot version to'
        required: false
        default: '${{github.event.repository.name}}-maven-dev-local'
      Coverity_URL:
        type: string
        description: ''
        required: false
        default: 'https://poc312.coverity.synopsys.com/'
        # default: 'https://coverity-test.aepsc.com/'
      Coverity_Checkers:
        type: string
        description: 'List of all Coverity Checkers and Aggressiveness Levels (Default: all)'
        required: false
        default: '--all'
      Coverity_Quality_Scan_View:
        type: string
        description: 'The name of the Coverity View to perform/validate the Quality Gate Scan'
        required: false
        default: 'AEP.CICD.Build.CheckPoint'
      ### SLS modified default to use the coverity stream name logic from SNPS integrations documentation (copied & pasted below) 
      Coverity_Branch:
        type: string
        description: 'The name of the branch to push into Coverity'
        required: false
        # default: '${{github.ref_name}}' ### original AEP default. SLS removed this line
        default: ${{ github.event.repository.name }}-${{ github.ref_name }}  ### SLS added this line
        # coverity_project_name: ${{ github.event.repository.name }}  ### SLS added this linecopied from SLS workflow
        # coverity_stream_name: ${{ github.event.repository.name }}-${{ github.ref_name }}  ### SLS added this linecopied from SLS workflow
      Blackduck_URL:
        type: string
        description: URL for Code Dx
        required: false
        default: 'https://poc312.blackduck.synopsys.com/'
        # default: 'https://blackduck-test.aepsc.com'  ### original AEP default. SLS removed this line
      SRM_URL: 
        type: string
        description: URL for Software Risk Manager (aka Code Dx)
        required: false
        default: 'https://poc309.srm.synopsys.com/srm'
        # default: 'https://srm-test.aepsc.com/srm' ### original AEP default. SLS removed this line
      Seeker_URL: 
        type: string
        description: URL for Seeker
        required: false
        default: 'https://poc312.seeker.synopsys.com/'
        # default: 'https://seeker-test.aepsc.com/' ### original AEP default. SLS removed this line
      Install_Script:
        type: string
        description: 'Powershell Script File for Team specific Installation steps'
        required: false
      Post_Build_Script:
        type: string
        description: 'Powershell Script File for Team specific Post Build steps'
        required: false
      Build_Name:
        type: string
        description: 'The Name of the Artifactory Build'
        required: false
        default: '${{github.event.repository.name}}-${{ github.workflow }}'
      Build_Number:
        type: string
        description: 'The Build # within Artifactory'
        required: false
        default: ${{ github.run_number }}
      # BlackDuck_Detect_Excluded_Directories  ### added by SLS because of reference below.  might be better as a GH project level env variable. see blackduck-action-new.yml. 
        # type: string
        # required: false
        # description: 'directories to be excluded during BD scan' 
        # default: 'idir'  # consider adding '**/*test*' 
        

jobs:
  Maven:
    runs-on: ${{inputs.Runs_On}}
    name: Maven Project Build, Artifactory Push and Xray Scan
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v2
        
      - name: Synopsys Tools Suite Project Validation
        id: SynopsysProjectCheck
        uses: aep-actions/synopsys-project-check@main
        with:
          Coverity_Username: ${{secrets.COVERITY_USERNAME}}
          Coverity_Password: ${{secrets.COVERITY_PASSWORD}}
          BlackDuck_CLI_Token: ${{secrets.BLACKDUCK_TEST_API_TOKEN}}
          CodeDx_CLI_Token: ${{secrets.CODEDX_REPO_API_KEY}}
      
      ### SLS commented this section out and replaced with Clean GIt and Maven Build    
      # - name: Maven AEP Setup
        # id: MavenSetup
        # uses: aep-actions/maven-aep-setup@main
        # env: 
           # ARTIFACTORY_URL: 'https://rtfx-test.aepsc.com'
        # with:
          # Java_Version: ${{inputs.Java_Version}}
          # Maven_Version: ${{inputs.Maven_Version}}
          # Artifactory_CLI_Token: ${{secrets.ARTIFACTORY_REPO_TOKEN}}
          # Artifactory_Server_ID: ${{inputs.Artifactory_Server_ID}}
          # Artifactory_Dependency_Releases_Lib: '${{inputs.Artifactory_Dependency_Releases_Lib}}'
          # Artifactory_Dependency_Snapshots_Lib: '${{inputs.Artifactory_Dependency_Snapshots_Lib}}'
          # Artifactory_Deployment_Releases_Lib: '${{inputs.Artifactory_Deployment_Releases_Lib}}'
          # Artifactory_Deployment_Snapshots_Lib: '${{inputs.Artifactory_Deployment_Snapshots_Lib}}'

      ###  this section added by SLS
      - name: clean git
        run: rm -r .git/config
      - name: Maven Build
        run: mvn -B -DskipTests package
            
      # - name: Pre Install Script   ### SLS removed this section 
        # id: PreInstallScript
        # if: ${{inputs.Install_Script}}
        # run: ${{inputs.Install_Script}}
        # shell: bash

      - name: Maven Build & Coverity Full Scan
        id: CovBuildScan
        # uses: aep-actions/coverity-action-old@main
        uses: aep-actions/coverity-action-new@main
        with: 
          Coverity_URL: ${{inputs.Coverity_URL}}
          Coverity_Token: ${{secrets.COVERITY_REPO_TOKEN}}
          Coverity_Username: ${{secrets.COVERITY_USERNAME}}
          Coverity_Password: ${{secrets.COVERITY_PASSWORD}}
          Coverity_Checkers: ${{inputs.Coverity_Checkers}}
          # Coverity_Branch: ${{inputs.Coverity_Branch}} ## SLS removed this line
          Coverity_Branch: ${{ github.event.repository.name }}-${{ github.base_ref }}  ## SLS added this line
          coverity_project_name: ${{ github.event.repository.name }}  ## SLS added this line
          coverity_stream_name: ${{ github.event.repository.name }}-${{ github.base_ref }}  ## SLS added this line
          Build_Name: ${{inputs.Build_Name}}
          Build_Number: ${{inputs.Build_Number}}
          Build_Command: 'mvn'
          Build_Parms: ${{inputs.Maven_Build_Parms}}
          Project_Solution_File: ${{inputs.Maven_POM_File}}

      - name: Post Build Script
        id: PostBuildScript
        if: ${{inputs.Post_Build_Script}}
        run: ${{inputs.Post_Build_Script}}
        shell: bash
        
      - name: Perform Synopsys Black Duck Detect Scan
        id: BlackDuckDetectScan
        uses: aep-actions/blackduck-action-new@main
        with: 
          Blackduck_API_Token: ${{ secrets.BLACKDUCK_TEST_API_TOKEN }}
          GitHub_Token: ${{ secrets.GITHUB_TOKEN }}
          BlackDuck_URL: ${{inputs.Blackduck_URL}}
          #Detect_Code_Loc_Name: ${{inputs.BlackDuck_Detect_Code_Loc_Name}}
          #Detect_Excluded_Directories: ${{inputs.BlackDuck_Detect_Excluded_Directories}}
          #Detect_Scan_Mode: ${{inputs.BlackDuck_Detect_Scan_Mode}}
                    
      - name: SRM-Code Dx Analysis  ### SLS updated name
        id: SRM-CodeDx-Analysis  ### SLS updated ID
        uses: aep-actions/srm-action-new@main
        with:
          CodeDx_API_Token: ${{secrets.CODEDX_REPO_API_KEY}}
          CodeDx_URL: ${{inputs.CodeDx_URL}}
