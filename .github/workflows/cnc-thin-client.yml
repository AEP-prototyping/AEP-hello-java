# example workflow for Coverity thin client with CNC scan farm
name: cnc-thin-client

on:
  push:
    branches: [ main, master, stage, release ]
  pull_request:
    branches: [ main, master, stage, release ]
  workflow_dispatch:

jobs:
  coverity:
    runs-on: ubuntu-latest
    env:
      COV_URL: ${{ secrets.COV_URL }}
      COV_USER: ${{ secrets.COV_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_THIN_CLIENT: cov_thin_client-linux64-2022.12.1.tar.gz   # see ER CNC-861 to support version=latest
      COVERITY_FULL_CLIENT: cov-analysis-linux64-2022.12.1.tar.gz      # see ER CNC-701 to add full client to downloads; may not be needed in 2022.9.0
      COV_PROJECT: ${{ github.event.repository.name }}
      COV_STREAM: ${{ github.event.repository.name }}-${{ github.ref_name }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: microsoft
        cache: maven
    - name: Coverity Full Scan
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLsS $COV_URL/api/v2/scans/downloads/$COVERITY_THIN_CLIENT | tar -C $RUNNER_TEMP -xzf -
        $RUNNER_TEMP/bin/coverity scan -o analyze.location=connect -o commit.connect.url=$COV_URL -o commit.connect.stream=$COV_STREAM
    - name: Coverity Quality Gate
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/api/viewContents/issues/v1/Outstanding%20Issues?projectId=$COV_PROJECT > results.json
        if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then cat results.json | jq .viewContentsV1.rows; fi
    - id: changeset
      name: Get Pull Request Changeset
      uses: jitterbit/get-changed-files@v1
      if: ${{ github.event_name == 'pull_request' }}
#    - name: Coverity Incremental Scan - HFI
#      if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
#      run: |
#        COVERITY_TOOL_HOME=$RUNNER_TEMP/$(echo $COVERITY_FULL_CLIENT | sed 's/.tar.gz//')
#        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/downloadFile.htm?fn=$COVERITY_FULL_CLIENT | tar -C $RUNNER_TEMP -xzf -
#        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o $COVERITY_TOOL_HOME/bin/license.dat $COV_URL/downloadFile.htm?fn=license.dat
#        export PATH=$PATH:$COVERITY_TOOL_HOME/bin
#        cov-run-desktop --dir idir --url $COV_URL --stream $COV_PROJECT-$GITHUB_BASE_REF --build $BLDCMD
#        cov-run-desktop --dir idir --url $COV_URL --stream $COV_PROJECT-$GITHUB_BASE_REF --present-in-reference false \
#          --ignore-uncapturable-inputs true --json-output-v7 coverity-results.json ${{ steps.changeset.outputs.added_modified }}
    - name: Coverity Incremental Scan - PFI
      if: ${{ false && github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
      run: |
        curl -fLsS $COV_URL/api/v2/scans/downloads/$COVERITY_THIN_CLIENT | tar -C $RUNNER_TEMP -xzf -
        $RUNNER_TEMP/bin/coverity scan -o analyze.location=connect -o commit.connect.comparison-report=comparison-report.json \
          -o commit.connect.url=$COV_URL -o commit.connect.stream=$COV_STREAM
    - name: Coverity Pull Request Feedback
      if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
      uses: synopsys-sig/coverity-report-output-v7-json@v0.1.1
      with:
        json-file-path: ./coverity-results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        coverity-url: ${{ secrets.COVERITY_URL }}
        coverity-project-name: ${{ github.event.repository.name }}
        coverity-username: ${{ secrets.COV_USER }}
        coverity-password: ${{ secrets.COVERITY_PASSPHRASE }}
