# example workflow for Black Duck scans using the Synopsys Action
# https://github.com/marketplace/actions/synopsys-action
name: blackduck-sig-action

on:
  push:
    branches: [ main, master, stage, release ]
  pull_request:
    branches: [ main, master, stage, release ]
  workflow_dispatch:

jobs:
  blackduck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: microsoft
        cache: maven
    - name: Maven Build
      run: mvn -B -DskipTests package
    - name: Black Duck Scan
      uses: synopsys-sig/synopsys-action@v1.0.0
      env:
        DETECT_PROJECT_NAME: chuckaude-${{ github.event.repository.name }}
        DETECT_PROJECT_VERSION_NAME: ${{ github.ref_name }}
        DETECT_CODE_LOCATION_NAME: chuckaude-${{ github.event.repository.name }}-${{ github.ref_name }}
        DETECT_EXCLUDED_DETECTOR_TYPES: GIT
      with:
        blackduck_url: ${{ secrets.BLACKDUCK_URL }}
        blackduck_apiToken: ${{ secrets.BLACKDUCK_API_TOKEN }}
        # Enabled by default, pushes will initiate a full INTELLIGENT scan and pull requests will initiate a RAPID scan
        #blackduck_scan_full: false
        # Enabled by default, create fix pull requests if vulnerabilities are reported
        # Only supported for NodeJS projects, so disable it otherwise
        blackduck_automation_fixpr: false
        # Required parameter if blackduck_automation_fixpr is enabled
        # Make sure GITHUB_TOKEN has the appropriate permissions
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # Optional parameter to break build. The values could be: ALL|NONE|BLOCKER|CRITICAL|MAJOR|MINOR|OK|TRIVIAL|UNSPECIFIED
        # single parameter
        blackduck_scan_failure_severities: "[\"BLOCKER\"]"
        # multiple parameters
        # blackduck_scan_failure_severities: "[\"BLOCKER\", \"CRITICAL\", \"MAJOR\"]"
