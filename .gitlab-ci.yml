stages:
  - build
  - test
  - coverity
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAIN_BRANCHES: "/master|stage|release/"

cache:
  paths:
    - .m2/repository/
    - target/

image: maven:3-jdk-11

build:
  stage: build
  script: mvn $MAVEN_CLI_OPTS compile

test:
  stage: test
  script: mvn $MAVEN_CLI_OPTS test

deploy:
  stage: deploy
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  script: mvn $MAVEN_CLI_OPTS install

coverity-full:
  stage: coverity
  image: coverity
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  variables:
    COVERITY_STREAM: "$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
  script:
    - cov-build --dir idir --fs-capture-search $CI_PROJECT_DIR mvn $MAVEN_CLI_OPTS clean package -DskipTests
    - cov-analyze --dir idir --ticker-mode none --strip-path $CI_PROJECT_DIR --all --webapp-security
    - cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --on-new-cert trust --stream $COVERITY_STREAM --scm git
        --description $CI_PIPELINE_URL --target Linux_x86_64 --version $CI_COMMIT_SHORT_SHA

coverity-gate:
  stage: coverity
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  allow_failure: false
  script:
    - apt-get update && apt-get install -y jq
    - curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/api/viewContents/issues/v1/OWASP%20Web%20Top%2010?projectId=$CI_PROJECT_NAME > results.json
    - if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then cat results.json | jq .viewContentsV1.rows; exit 1; fi

coverity-incr:
  stage: coverity
  image: coverity
  only:
    refs:
    - merge_requests
    variables:
      - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ $MAIN_BRANCHES
  variables:
    COVERITY_STREAM: "$CI_PROJECT_NAME-$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
  script:
    - export CHANGE_SET=$(git --no-pager diff origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME --name-only)
    - cov-run-desktop --dir idir --url $COV_URL --on-new-cert trust --stream $COVERITY_STREAM --build mvn $MAVEN_CLI_OPTS clean package -DskipTests
    - cov-run-desktop --dir idir --url $COV_URL --on-new-cert trust --stream $COVERITY_STREAM --present-in-reference false
        --ignore-uncapturable-inputs true --exit1-if-defects true $CHANGE_SET

### below are additional, disabled examples

# volume mount Coverity from docker host
.coverity-volume-mount:
  stage: coverity
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  variables:
    COVERITY_STREAM: "$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
  script:
    - export PATH=$PATH:/opt/coverity/analysis/2020.12/bin
    - cov-build --dir idir --fs-capture-search $CI_PROJECT_DIR mvn $MAVEN_CLI_OPTS clean package -DskipTests
    - cov-analyze --dir idir --ticker-mode none --strip-path $CI_PROJECT_DIR --all --webapp-security
    - cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --stream $COVERITY_STREAM --scm git
        --description $CI_PIPELINE_URL --target Linux_x86_64 --version $CI_COMMIT_SHORT_SHA

# download Coverity from server
.coverity-server-download:
  stage: coverity
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  variables:
    COVERITY_STREAM: "$CI_PROJECT_NAME-$CI_COMMIT_BRANCH"
    CSA: "cov-analysis-linux64-2020.12"
  script:
    - curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/downloadFile.htm?fn=$CSA.tar.gz | tar -C /tmp -xzf -
    - curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE -o /tmp/$CSA/bin/license.dat $COV_URL/downloadFile.htm?fn=license.dat
    - export PATH=$PATH:/tmp/$CSA/bin
    - cov-configure --java
    - cov-build --dir idir --fs-capture-search $CI_PROJECT_DIR mvn $MAVEN_CLI_OPTS clean package -DskipTests
    - cov-analyze --dir idir --ticker-mode none --strip-path $CI_PROJECT_DIR --all --webapp-security
    - cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --stream $COVERITY_STREAM --scm git
        --description $CI_PIPELINE_URL --target Linux_x86_64 --version $CI_COMMIT_SHORT_SHA

# use RestAPI to query for issues
.coverity-results:
  stage: coverity
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ $MAIN_BRANCHES
  script:
    - curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/api/viewContents/issues/v1/Outstanding%20Issues?projectId=$CI_PROJECT_NAME > results.json
    - curl -fLsS --header "Accept:text/csv" --user $COV_USER:$COVERITY_PASSPHRASE $COV_URL/api/viewContents/issues/v1/Outstanding%20Issues?projectId=$CI_PROJECT_NAME > results.csv
