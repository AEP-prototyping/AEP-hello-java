trigger:
- master
- stage

pool:
  name: 'private-linux'

variables:
- group: coverity-onprem
- name: COVERITY_TOOL_HOME
  value: $(COVERITY_TOOL_HOME_Linux)

# TODO replace Linux with $(Agent.OS) - https://github.com/microsoft/azure-pipelines-yaml/issues/297
#- name: COVERITY_TOOL_HOME
#  ${{ if eq( variables['Agent.OS'], 'Linux' ) }}: 
#    value: $(COVERITY_TOOL_HOME_Linux)
#  ${{ if eq( variables['Agent.OS'], 'Windows_NT' ) }}: 
#    value: $(COVERITY_TOOL_HOME_Windows_NT)

jobs:

- job: Build

  workspace:
    clean: all

  steps:

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package -DskipTests'
      publishJUnitResults: false

- job: Coverity

  workspace:
    clean: all

  steps:

  - bash: |
      env | sort
    displayName: Environment

# TODO: save idir as artifact for use in incremental scans
  - task: synopsys-coverity.synopsys-coverity-azure-devops.coverity-task.synopsys-coverity@1
    condition: not(eq(variables['Build.Reason'], 'PullRequest'))
    displayName: Full
    inputs:
      coverityService: 'coverity-onprem'
      projectName: '$(COV_PROJECT)'
      streamName: '$(COV_PROJECT)-$(Build.SourceBranchName)'
      checkIssues: true
      issueView: 'Newly Detected Issues'
      issueStatus: unstable
      buildCommand: 'mvn -B package -DskipTests'
      customCommandArgs: true
      covBuildArgs: '--fs-capture-search $(Build.SourcesDirectory)'
      covAnalyzeArgs: '--ticker-mode none --strip-path $(Build.SourcesDirectory) --webapp-security'
      covCommitArgs: '--ticker-mode none --description $(Build.BuildURI) --version $(Build.SourceVersion) --scm git'
      allowUntrusted: true

# TODO: plugin incremental mode has flawed workflow, commits to reference stream
#  - task: synopsys-coverity.synopsys-coverity-azure-devops.coverity-task.synopsys-coverity@1
#    condition: eq(variables['Build.Reason'], 'PullRequest')
#    displayName: Incremental
#    inputs:
#      coverityService: 'coverity-onprem'
#      projectName: '$(COV_PROJECT)'
#      streamName: '$(COV_PROJECT)-$(Build.SourceBranchName)'
#      coverityAnalysisType: incremental
#      buildCommand: 'mvn -B package -DskipTests'
#      customCommandArgs: true
#      covBuildArgs: '--fs-capture-search $(Build.SourcesDirectory)'
#      covDesktopArgs: '--ignore-uncapturable-inputs true src/main/java/HelloWorld.java'
#      covCommitArgs: '--ticker-mode none --description $(Build.BuildURI) --version $(Build.SourceVersion) --scm git'
#      allowUntrusted: true

# TODO: reuse idir artifact from full scan
# TODO: verify GPR target branch has a full scan
# TODO: workaround for https://github.com/microsoft/azure-pipelines-tasks/issues/2147 is linux only
# TODO: remove --set-new-defect-owner false when IM-25023 is fixed
# TODO: decorate GPR comment with c-r-d output
  - bash: |
      REMOVE="refs/heads/"
      export SYSTEM_PULLREQUEST_TARGETBRANCHNAME="${SYSTEM_PULLREQUEST_TARGETBRANCH//$REMOVE/}"
      export CHANGE_SET=$(git --no-pager diff origin/$SYSTEM_PULLREQUEST_TARGETBRANCHNAME --name-only)
      export COV_STREAM="$COV_PROJECT-$SYSTEM_PULLREQUEST_TARGETBRANCHNAME"
      export PATH=$PATH:$COVERITY_TOOL_HOME/bin
      set -x
      cov-build --dir idir mvn -B compile
      cov-run-desktop --dir idir --url $COV_URL --stream $COV_STREAM --present-in-reference false --ignore-uncapturable-inputs true --set-new-defect-owner false --exit1-if-defects true $CHANGE_SET
    env:
      COVERITY_PASSPHRASE: $(COVERITY_PASSPHRASE)
    condition: eq(variables['Build.Reason'], 'PullRequest')
    displayName: Incremental
